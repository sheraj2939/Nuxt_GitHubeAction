{"version":3,"file":"router.mjs","sources":["../../../../../../../../node_modules/nuxt/dist/app/plugins/router.js"],"sourcesContent":["import { computed, defineComponent, h, isReadonly, reactive } from \"vue\";\nimport { isEqual, joinURL, parseQuery, stringifyParsedURL, stringifyQuery, withoutBase } from \"ufo\";\nimport { createError } from \"h3\";\nimport { defineNuxtPlugin, useRuntimeConfig } from \"../nuxt.js\";\nimport { getRouteRules } from \"../composables/manifest.js\";\nimport { clearError, showError } from \"../composables/error.js\";\nimport { navigateTo } from \"../composables/router.js\";\nimport { globalMiddleware } from \"#build/middleware\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nfunction getRouteFromPath(fullPath) {\n  if (typeof fullPath === \"object\") {\n    fullPath = stringifyParsedURL({\n      pathname: fullPath.path || \"\",\n      search: stringifyQuery(fullPath.query || {}),\n      hash: fullPath.hash || \"\"\n    });\n  }\n  const url = new URL(fullPath.toString(), import.meta.client ? window.location.href : \"http://localhost\");\n  return {\n    path: url.pathname,\n    fullPath,\n    query: parseQuery(url.search),\n    hash: url.hash,\n    // stub properties for compat with vue-router\n    params: {},\n    name: void 0,\n    matched: [],\n    redirectedFrom: void 0,\n    meta: {},\n    href: fullPath\n  };\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:router\",\n  enforce: \"pre\",\n  setup(nuxtApp) {\n    const initialURL = import.meta.client ? withoutBase(window.location.pathname, useRuntimeConfig().app.baseURL) + window.location.search + window.location.hash : nuxtApp.ssrContext.url;\n    const routes = [];\n    const hooks = {\n      \"navigate:before\": [],\n      \"resolve:before\": [],\n      \"navigate:after\": [],\n      \"error\": []\n    };\n    const registerHook = (hook, guard) => {\n      hooks[hook].push(guard);\n      return () => hooks[hook].splice(hooks[hook].indexOf(guard), 1);\n    };\n    const baseURL = useRuntimeConfig().app.baseURL;\n    const route = reactive(getRouteFromPath(initialURL));\n    async function handleNavigation(url, replace) {\n      try {\n        const to = getRouteFromPath(url);\n        for (const middleware of hooks[\"navigate:before\"]) {\n          const result = await middleware(to, route);\n          if (result === false || result instanceof Error) {\n            return;\n          }\n          if (typeof result === \"string\" && result.length) {\n            return handleNavigation(result, true);\n          }\n        }\n        for (const handler of hooks[\"resolve:before\"]) {\n          await handler(to, route);\n        }\n        Object.assign(route, to);\n        if (import.meta.client) {\n          window.history[replace ? \"replaceState\" : \"pushState\"]({}, \"\", joinURL(baseURL, to.fullPath));\n          if (!nuxtApp.isHydrating) {\n            await nuxtApp.runWithContext(clearError);\n          }\n        }\n        for (const middleware of hooks[\"navigate:after\"]) {\n          await middleware(to, route);\n        }\n      } catch (err) {\n        if (import.meta.dev && !hooks.error.length) {\n          console.warn(\"No error handlers registered to handle middleware errors. You can register an error handler with `router.onError()`\", err);\n        }\n        for (const handler of hooks.error) {\n          await handler(err);\n        }\n      }\n    }\n    const currentRoute = computed(() => route);\n    const router = {\n      currentRoute,\n      isReady: () => Promise.resolve(),\n      // These options provide a similar API to vue-router but have no effect\n      options: {},\n      install: () => Promise.resolve(),\n      // Navigation\n      push: (url) => handleNavigation(url, false),\n      replace: (url) => handleNavigation(url, true),\n      back: () => window.history.go(-1),\n      go: (delta) => window.history.go(delta),\n      forward: () => window.history.go(1),\n      // Guards\n      beforeResolve: (guard) => registerHook(\"resolve:before\", guard),\n      beforeEach: (guard) => registerHook(\"navigate:before\", guard),\n      afterEach: (guard) => registerHook(\"navigate:after\", guard),\n      onError: (handler) => registerHook(\"error\", handler),\n      // Routes\n      resolve: getRouteFromPath,\n      addRoute: (parentName, route2) => {\n        routes.push(route2);\n      },\n      getRoutes: () => routes,\n      hasRoute: (name) => routes.some((route2) => route2.name === name),\n      removeRoute: (name) => {\n        const index = routes.findIndex((route2) => route2.name === name);\n        if (index !== -1) {\n          routes.splice(index, 1);\n        }\n      }\n    };\n    nuxtApp.vueApp.component(\"RouterLink\", defineComponent({\n      functional: true,\n      props: {\n        to: {\n          type: String,\n          required: true\n        },\n        custom: Boolean,\n        replace: Boolean,\n        // Not implemented\n        activeClass: String,\n        exactActiveClass: String,\n        ariaCurrentValue: String\n      },\n      setup: (props, { slots }) => {\n        const navigate = () => handleNavigation(props.to, props.replace);\n        return () => {\n          const route2 = router.resolve(props.to);\n          return props.custom ? slots.default?.({ href: props.to, navigate, route: route2 }) : h(\"a\", { href: props.to, onClick: (e) => {\n            e.preventDefault();\n            return navigate();\n          } }, slots);\n        };\n      }\n    }));\n    if (import.meta.client) {\n      window.addEventListener(\"popstate\", (event) => {\n        const location = event.target.location;\n        router.replace(location.href.replace(location.origin, \"\"));\n      });\n    }\n    nuxtApp._route = route;\n    nuxtApp._middleware ||= {\n      global: [],\n      named: {}\n    };\n    const initialLayout = nuxtApp.payload.state._layout;\n    nuxtApp.hooks.hookOnce(\"app:created\", async () => {\n      router.beforeEach(async (to, from) => {\n        to.meta = reactive(to.meta || {});\n        if (nuxtApp.isHydrating && initialLayout && !isReadonly(to.meta.layout)) {\n          to.meta.layout = initialLayout;\n        }\n        nuxtApp._processingMiddleware = true;\n        if (import.meta.client || !nuxtApp.ssrContext?.islandContext) {\n          const middlewareEntries = /* @__PURE__ */ new Set([...globalMiddleware, ...nuxtApp._middleware.global]);\n          if (isAppManifestEnabled) {\n            const routeRules = await nuxtApp.runWithContext(() => getRouteRules({ path: to.path }));\n            if (routeRules.appMiddleware) {\n              for (const key in routeRules.appMiddleware) {\n                const guard = nuxtApp._middleware.named[key];\n                if (!guard) {\n                  return;\n                }\n                if (routeRules.appMiddleware[key]) {\n                  middlewareEntries.add(guard);\n                } else {\n                  middlewareEntries.delete(guard);\n                }\n              }\n            }\n          }\n          for (const middleware of middlewareEntries) {\n            const result = await nuxtApp.runWithContext(() => middleware(to, from));\n            if (import.meta.server) {\n              if (result === false || result instanceof Error) {\n                const error = result || createError({\n                  statusCode: 404,\n                  statusMessage: `Page Not Found: ${initialURL}`,\n                  data: {\n                    path: initialURL\n                  }\n                });\n                delete nuxtApp._processingMiddleware;\n                return nuxtApp.runWithContext(() => showError(error));\n              }\n            }\n            if (result === true) {\n              continue;\n            }\n            if (result || result === false) {\n              return result;\n            }\n          }\n        }\n      });\n      router.afterEach(() => {\n        delete nuxtApp._processingMiddleware;\n      });\n      await router.replace(initialURL);\n      if (!isEqual(route.fullPath, initialURL)) {\n        await nuxtApp.runWithContext(() => navigateTo(route.fullPath));\n      }\n    });\n    return {\n      provide: {\n        route,\n        router\n      }\n    };\n  }\n});\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}